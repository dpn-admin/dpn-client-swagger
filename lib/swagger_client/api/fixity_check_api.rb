=begin
#DPN API

#Digital Preservation Network

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module SwaggerClient
  class FixityCheckApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # List of fixity checks
    # Returns a list of fixity checks 
    # @param page Page number to return, starting at 1.  For use  with page_size. 
    # @param page_size Max results per page. 
    # @param [Hash] opts the optional parameters
    # @option opts [DateTime] :before Only include records with created_at **earlier**  than this, inclusive. 
    # @option opts [DateTime] :after Only include records with created_at **later**  than this, inclusive. 
    # @option opts [String] :bag Filter by the associated bag&#39;s uuid 
    # @option opts [BOOLEAN] :latest For each set of results that differ only by timestamp, include only the most recent result. This filter is applied after other filters. 
    # @option opts [Array<String>] :order_by Comma separated list of string fields by which to order the response. 
    # @option opts [String] :node Filter by the namespace of the node that performed the check. 
    # @return [FixityCheckResultList]
    def fixity_check_get(page, page_size, opts = {})
      data, _status_code, _headers = fixity_check_get_with_http_info(page, page_size, opts)
      return data
    end

    # List of fixity checks
    # Returns a list of fixity checks 
    # @param page Page number to return, starting at 1.  For use  with page_size. 
    # @param page_size Max results per page. 
    # @param [Hash] opts the optional parameters
    # @option opts [DateTime] :before Only include records with created_at **earlier**  than this, inclusive. 
    # @option opts [DateTime] :after Only include records with created_at **later**  than this, inclusive. 
    # @option opts [String] :bag Filter by the associated bag&#39;s uuid 
    # @option opts [BOOLEAN] :latest For each set of results that differ only by timestamp, include only the most recent result. This filter is applied after other filters. 
    # @option opts [Array<String>] :order_by Comma separated list of string fields by which to order the response. 
    # @option opts [String] :node Filter by the namespace of the node that performed the check. 
    # @return [Array<(FixityCheckResultList, Fixnum, Hash)>] FixityCheckResultList data, response status code and response headers
    def fixity_check_get_with_http_info(page, page_size, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FixityCheckApi.fixity_check_get ..."
      end
      # verify the required parameter 'page' is set
      fail ArgumentError, "Missing the required parameter 'page' when calling FixityCheckApi.fixity_check_get" if page.nil?
      # verify the required parameter 'page_size' is set
      fail ArgumentError, "Missing the required parameter 'page_size' when calling FixityCheckApi.fixity_check_get" if page_size.nil?
      if opts[:'order_by'] && !['created_at'].include?(opts[:'order_by'])
        fail ArgumentError, 'invalid value for "order_by", must be one of created_at'
      end
      # resource path
      local_var_path = "/fixity_check".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'page'] = page
      query_params[:'page_size'] = page_size
      query_params[:'before'] = opts[:'before'] if !opts[:'before'].nil?
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'bag'] = opts[:'bag'] if !opts[:'bag'].nil?
      query_params[:'latest'] = opts[:'latest'] if !opts[:'latest'].nil?
      query_params[:'order_by'] = @api_client.build_collection_param(opts[:'order_by'], :multi) if !opts[:'order_by'].nil?
      query_params[:'node'] = opts[:'node'] if !opts[:'node'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'FixityCheckResultList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FixityCheckApi#fixity_check_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a fixity check
    # This endpoint allows the creation of a single fixity check record through a post body.  The body is the same as the data structure for the fixity check.  If successful, the response will contain the created record. 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [FixityCheck]
    def fixity_check_post(body, opts = {})
      data, _status_code, _headers = fixity_check_post_with_http_info(body, opts)
      return data
    end

    # Create a fixity check
    # This endpoint allows the creation of a single fixity check record through a post body.  The body is the same as the data structure for the fixity check.  If successful, the response will contain the created record. 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(FixityCheck, Fixnum, Hash)>] FixityCheck data, response status code and response headers
    def fixity_check_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FixityCheckApi.fixity_check_post ..."
      end
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling FixityCheckApi.fixity_check_post" if body.nil?
      # resource path
      local_var_path = "/fixity_check".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'FixityCheck')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FixityCheckApi#fixity_check_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
