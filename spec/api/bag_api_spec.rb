=begin
#DPN API

#Digital Preservation Network

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::BagApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BagApi' do
  before do
    # run before each test
    @instance = SwaggerClient::BagApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BagApi' do
    it 'should create an instact of BagApi' do
      expect(@instance).to be_instance_of(SwaggerClient::BagApi)
    end
  end

  # unit tests for bag_get
  # List of bags
  # Returns a list of Bag records. 
  # @param page Page number to return, starting at 1.  For use  with page_size. 
  # @param page_size Max results per page. 
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :before Only include records with updated_at **earlier**  than this, inclusive. 
  # @option opts [DateTime] :after Only include records with updated_at **later**  than this, inclusive. 
  # @option opts [String] :bag_type Filter by bag type. Consult the Bag definitions for the supported values. 
  # @option opts [String] :admin_node Filter by admin_node namespace 
  # @option opts [String] :ingest_node Filter by ingest_node namespace 
  # @option opts [String] :member Filter by member_id
  # @option opts [String] :replicated_by The namespace of the replicating node on which  to filter.  Multiple filters can be used, separated by comma.  The result will include the union (OR)  of the filtered results. 
  # @option opts [Array<String>] :order_by Comma separated list of string fields by which to order the response. 
  # @option opts [String] :first_version_uuid Filter by first_version_uuid. 
  # @return [BagResultList]
  describe 'bag_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bag_post
  # Create a bag
  # This endpoint allows the creation of a single bag through a post body. The post body is the same as the data structure for the bag.  If successful, the response will be identical to that of a GET request. 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Bag]
  describe 'bag_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bag_uuid_get
  # Returns the data for a single bag record matching the uuid.
  # Returns the data for a single bag record matching the uuid.
  # @param uuid UUIDv4 of the target bag
  # @param [Hash] opts the optional parameters
  # @return [Bag]
  describe 'bag_uuid_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bag_uuid_put
  # Update the bag
  # Updates a single bag matching the uuid.  The body of the put is the same as the data structure for the bag.  If successful, the response will be identical to that of a GET request. 
  # @param uuid UUIDv4 of the target bag
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Bag]
  describe 'bag_uuid_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for member_member_id_bags_get
  # Returns the member&#39;s bags
  # Returns the member&#39;s bags.  Behavior should match that of &#x60;&#x60;&#x60;/bags/?member&#x3D;&lt;member:member_id&gt;&#x60;&#x60;&#x60;, including querystring options except for &#x60;&#x60;&#x60;member&#x60;&#x60;&#x60;. 
  # @param member_id member_id of the member
  # @param [Hash] opts the optional parameters
  # @return [BagResultList]
  describe 'member_member_id_bags_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
