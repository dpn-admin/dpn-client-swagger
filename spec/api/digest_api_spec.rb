=begin
#DPN API

#Digital Preservation Network

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DigestApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DigestApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DigestApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DigestApi' do
    it 'should create an instact of DigestApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DigestApi)
    end
  end

  # unit tests for bag_uuid_digest_algorithm_get
  # Show a specific digest record.
  # Returns the data for the specific digest record matching the bag&#39;s uuid and the digest algorithm.  These two values always uniquely identify a digest. 
  # @param uuid UUIDv4 of the target bag
  # @param algorithm Name of the algorithm used
  # @param [Hash] opts the optional parameters
  # @return [Digest]
  describe 'bag_uuid_digest_algorithm_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bag_uuid_digest_get
  # List of digests for the specified bag
  # Return a list of message digests for the specified bag. 
  # @param uuid UUIDv4 of the target bag
  # @param page Page number to return, starting at 1.  For use  with page_size. 
  # @param page_size Max results per page. 
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :before Only include records with created_at **earlier**  than this, inclusive. 
  # @option opts [DateTime] :after Only include records with created_at **later**  than this, inclusive. 
  # @option opts [Array<String>] :order_by Comma separated list of string fields by which to order the response. 
  # @return [DigestResultList]
  describe 'bag_uuid_digest_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bag_uuid_digest_post
  # Create a digest for the specified bag
  # This endpoint allows the creation of a single digest through a post body.  The body is the same as the data structure for the Digest. If successful, the response will be identical to that of a GET request. 
  # @param uuid UUIDv4 of the target bag
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Digest]
  describe 'bag_uuid_digest_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for digest_get
  # List of digests
  # This endpoint is meant to facilitate synchronizing of data.  It returns a list of digests. 
  # @param page Page number to return, starting at 1.  For use  with page_size. 
  # @param page_size Max results per page. 
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :before Only include records with created_at **earlier**  than this, inclusive. 
  # @option opts [DateTime] :after Only include records with created_at **later**  than this, inclusive. 
  # @option opts [Array<String>] :order_by Comma separated list of string fields by which to order the response. 
  # @return [DigestResultList]
  describe 'digest_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
